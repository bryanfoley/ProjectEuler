#include<vector>
#include<string>
#include<iostream>
using namespace std;

template < class T >
long prodVector(vector< T > &vectorRef);

int main(){

long n = 13;
long max = 0;
string input("7316717653133062491922511967442657474235\
53491949349698352031277450632623957831801698480186947885184385861560789112949495\
45950173795833195285320880551112540698747158523863050715693290963295227443043557\
66896648950445244523161731856403098711121722383113622298934233803081353362766142\
82806444486645238749303589072962904915604407723907138105158593079608667017242712\
18839987979087922749219016997208880937766572733300105336788122023542180975125454\
05947522435258490771167055601360483958644670632441572215539753697817977846174064\
95514929086256932197846862248283972241375657056057490261407972968652414535100474\
82166370484403199890008895243450658541227588666881164271714799244429282308634656\
74813919123162824586178664583591245665294765456828489128831426076900422421902267\
10556263211111093705442175069416589604080719840385096245544436298123098787992724\
42849091888458015616609791913387549920052406368991256071760605886116467109405077\
54100225698315520005593572972571636269561882670428252483600823257530420752963450");

string::iterator i = input.begin();

vector<long> vec;

while(i != input.end()+1){
    if(*i=='0'){
        long sum=0;
        (prodVector(vec) > max)? max=prodVector(vec) : max=max;
        vec.clear();
        ++i;
    }
    if(vec.size()==n){
        long sum =0;
        (prodVector(vec) > max)? max=prodVector(vec) : max=max;
        vec.clear();
        i-=n-1;
    }
    else{
        vec.push_back(*i-'0');
        ++i;
    }
}

cout << "The maximum value is: " << max << endl;

return 0;
}

template < class T >
long prodVector(vector< T > &vectorRef){
	if(vectorRef.empty()){
		cout << "Vector is empty" << endl;
	}
	else{
                long sum = 0;
		vector < long >::iterator iter = vectorRef.begin();
                sum+= *iter;
                ++iter;
		while (iter!=vectorRef.end()){
			sum= (sum)*(*iter);
			iter++;
		}
		return sum;
	}
}
